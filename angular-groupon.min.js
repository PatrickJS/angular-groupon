/*
  angular-groupon - v0.1.1 
  2014-01-05
*/

!function(window,angular){"use strict";angular.module("angular-groupon",["gdi2290.groupon"]),angular.module("ngGroupon",["gdi2290.groupon"]),angular.module("gdi2290.groupon",[]),angular.module("gdi2290.groupon",[]).provider("Groupon",function(){function prepareRequest(conf){return conf=conf||{},conf.callback="JSON_CALLBACK",conf.client_id=_apiKey,conf}var _apiKey="",_baseUrl="//api.groupon.com/v2",_statusUrl="//api.groupon.com/";this.setApiKey=function(key){_apiKey=key||_apiKey},this.setBaseUrl=function(uri){_baseUrl=uri||_baseUrl},this.setStatusUrl=function(uri){_statusUrl=uri||_statusUrl},this.$get=["$q","$http",function($q,$http){var service={getGrouponSays:function(limit,conf){var dfd=$q.defer();return conf=prepareRequest(conf),conf.limit=limit,$http({method:"JSONP",url:_baseUrl+"/groupon_says.json",params:conf}).success(function(data){dfd.resolve(data.deals)}).error(function(reason){dfd.reject(reason)}),dfd.promise},getDeals:function(conf){var dfd=$q.defer();return conf=prepareRequest(conf),$http({method:"JSONP",url:_baseUrl+"/deals.json",params:conf}).success(function(data){dfd.resolve(data.deals)}).error(function(reason){dfd.reject(reason)}),dfd.promise},getDeal:function(id,conf){var dfd=$q.defer();return conf=prepareRequest(conf),$http({method:"JSONP",url:_baseUrl+"/deals/"+id+".json",params:conf}).success(function(data){dfd.resolve(data.deals)}).error(function(reason){dfd.reject(reason)}),dfd.promise},getDealPosts:function(id,conf){var dfd=$q.defer();return conf=prepareRequest(conf),$http({method:"JSONP",url:_baseUrl+"/deals/"+id+"/posts.json",params:conf}).success(function(data){dfd.resolve(data.deals)}).error(function(reason){dfd.reject(reason)}),dfd.promise},getDivisions:function(conf){var dfd=$q.defer();return conf=prepareRequest(conf),$http({method:"JSONP",url:_baseUrl+"/divisions.json",params:conf}).success(function(data){dfd.resolve(data.deals)}).error(function(reason){dfd.reject(reason)}),dfd.promise},getStatus:function(conf){var dfd=$q.defer();return conf=prepareRequest(conf),$http({method:"JSONP",url:_statusUrl+"/status.json",params:conf}).success(function(data){dfd.resolve(data.deals)}).error(function(reason){dfd.reject(reason)}),dfd.promise}};return service}]})}(this,this.angular,void 0);
//# sourceMappingURL=angular-groupon.min.js.map